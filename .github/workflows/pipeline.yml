name: Pipeline

on:
  push:
    branches: [none]
  pull_request:
    branches: [none]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.10"
      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
      # - name: Run tests
      #   run: |
      #     cd backend
      #     pytest

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      - name: Build
        run: |
          cd frontend
          npm run build
      # - name: Run tests
      #   run: |
      #     cd frontend
      #     npm test

  deploy-backend:
    needs: [backend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.10"
      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
      - name: Generate .env file
        run: |
          cd backend
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: massive-physics-453901-s4
      - name: Deploy to App Engine
        run: |
          cd backend
          gcloud app deploy app.yaml --quiet --verbosity=debug

  #deploy-frontend:
  #  needs: [frontend]
  #  if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v3
  #    - name: Set up Node.js
  #      uses: actions/setup-node@v3
  #      with:
  #        node-version: "22"
  #    - name: Install dependencies
  #      run: |
  #        cd frontend
  #        npm ci
  #    - name: Generate .env file
  #      run: |
  #        cd frontend
  #        echo "VITE_API_URL=${{ secrets.API_URL }}" > .env
  #    - name: Build
  #      run: |
  #        cd frontend
  #        npm run build
  #    - name: Deploy to Firebase Hosting
  #      uses: FirebaseExtended/action-hosting-deploy@v0
  #      with:
  #        repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #        firebaseServiceAccount: '${{ secrets.FIREBASE_TOKEN }}'
  #        channelId: live
  #        projectId: mantenimiento-project